templates:
  # DRY template format - minimal differentiation approach
  "wait time in queue system":
    description: "Wait time analysis in queue system with generator, queue, and sink"
    params:
      count: !int 1000
      rate: !float 10.0
      service_time: !float 0.1
      deterministic: !bool false
        
    result:
      node: "{{.targetName}}-queue"
      statName: "AverageWaitTime"
      
    # Define common defaults once - no more repetition!
    defaults:
      metadata:
        labels:
          owner: "child"
      spec:
        params:
          deterministic: !bool "{{.deterministic}}"
    
    # Only specify what's actually different between nodes
    wants:
      - name: "{{.targetName}}-generator"
        type: sequence
        labels:
          role: source
          category: producer
        params:
          count: !int "{{.count}}"
          rate: !float "{{.rate}}"
          
      - name: "{{.targetName}}-queue"
        type: queue
        labels:
          role: processor
          category: queue
        params:
          service_time: !float "{{.service_time}}"
        using:
          - category: producer
          
      - name: "{{.targetName}}-sink"
        type: sink
        labels:
          role: collector
          category: display
        params:
          display_format: "Number: %d"
        using:
          - role: processor

  # High-throughput pipeline using DRY format
  "high-throughput-pipeline":
    description: "High-throughput pipeline with multiple parallel queues"
    params:
      count: !int 10000
      rate: !float 100.0
      service_time: !float 0.01
        
    result:
      node: "parallel-queue"
      statName: "TotalProcessed"
      
    defaults:
      metadata:
        labels:
          owner: "child"
      spec:
        params: {}
    
    wants:
      - name: "{{.targetName}}-generator"
        type: sequence
        labels:
          role: source
          category: producer
        params:
          count: !int "{{.count}}"
          rate: !float "{{.rate}}"
          
      - name: "{{.targetName}}-queue-1"
        type: queue
        labels:
          role: processor
          category: parallel-queue
          queue_id: "1"
        params:
          service_time: !float "{{.service_time}}"
        using:
          - category: producer
          
      - name: "{{.targetName}}-queue-2"
        type: queue
        labels:
          role: processor
          category: parallel-queue
          queue_id: "2"
        params:
          service_time: !float "{{.service_time}}"
        using:
          - category: producer
          
      - name: "{{.targetName}}-queue-3"
        type: queue
        labels:
          role: processor
          category: parallel-queue
          queue_id: "3"
        params:
          service_time: !float "{{.service_time}}"
        using:
          - category: producer
          
      - name: "{{.targetName}}-sink"
        type: sink
        labels:
          role: collector
          category: display
        params:
          display_format: "Processed: %d"
        using:
          - category: parallel-queue

  # Fibonacci pipeline using DRY format
  "fibonacci-pipeline":
    description: "Specialized fibonacci number processing pipeline"
    params:
      max_number: !int 100
      delay: !float 0.5
        
    defaults:
      metadata:
        labels:
          owner: "child"
      spec:
        params: {}
    
    wants:
      - name: "{{.targetName}}-fib-gen"
        type: fibonacci_generator
        labels:
          role: source
          category: fibonacci-producer
        params:
          max_number: !int "{{.max_number}}"
          delay: !float "{{.delay}}"
          
      - name: "{{.targetName}}-fib-sink"
        type: fibonacci_sink
        labels:
          role: collector
          category: fibonacci-display
        params:
          display_format: "Fibonacci: %d"
        using:
          - category: fibonacci-producer